// –£—Ä–æ–∫ 1

// const objA = {
//     x: 1,
// }

// // const objB = {
// //     y: 2,
// // }

// // const objC = {
// //     z: 3,
// // }


// // console.log(objA.x);


// // Object.create() = —Å—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏–π –ø–æ—Ä–æ–∂–Ω—ñ–π –æ–±'—î–∫—Ç, –∞–ª–µ –≤ [[Prototype]] –±—É–¥–µ –ª–µ–∂–∞—Ç–∏ —â–æ –≤ –¥—É–∂–∫–∞—Ö

// const objB = Object.create(objA); 

// objB.y = 2;

// // // console.log(objB); 
// // console.log(objB.x); 

// const objC = Object.create(objB);

// objC.z = 3;

// console.log(objC);

// // for (const i in objC) {
// //     console.log(i);
// // }

// // –Ω–∞–∑–≤–∞.hasOwnProperty = –ø–æ–≤–µ—Ä—Ç–∞—î true –∞–±–æ false, –ø–µ—Ä–µ–≤—ñ—Ä—è—î –Ω–∞ –ø—Ä–æ—Ç–æ—Ç–∏–ø–Ω–∏–π –∫–ª—é—á

// console.log(objC.hasOwnProperty("z"));
// console.log(objC.hasOwnProperty("y"));
// console.log(objC.hasOwnProperty("x"));

// console.log(objC.x);



// ==============================================================
//                       –§—É–Ω–∫—Ü—ñ—è –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
// ==============================================================

// –§—É–Ω–∫—Ü—ñ—è –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø—Ä–∏–π–º–∞—î —Ç—ñ–ª—å–∫–∏ this.

// –®–∞–±–ª–æ–Ω
// const Car = function({model, price, color} = {}) { // = {} - –≤–æ–Ω–∏ –ø–æ–≤–∏–Ω–Ω—ñ –¥–ª—è —Ç–æ–≥–æ —â–æ–±–∏ –Ω–µ –≤–∏–ª–∞–∑–∏–ª–∞ –ø–æ–º–∏–ª–∫–∞ –∫–æ–ª–∏ –Ω–µ–º–∞ –æ–±'—î–∫—Ç–∞
//     this.model = model;
//     this.price = price;
//     this.color = color;


// };

// Car.prototype.changePrice = function(newPrice) {
//     this.price = newPrice
// }

// Car.prototype.changeColor = function(newColor) {
//     this.color = newColor
// }

// // –ï–∫–∑–µ–º–ø–ª—è—Ä
// const lada = new Car({
//     model: "lada",
//     price: 100,
//     color: "red",
// });
// lada.changePrice(100000000)
// lada.changeColor("violet")
// console.log(lada);

// // –ï–∫–∑–µ–º–ø–ª—è—Ä
// const audi = new Car({
//     model: "audi",
//     price: 1000,
//     color: "blue",
// });
// console.log(audi);

// // const bmw = new Car(
// //     // –Ø–∫—â–æ –Ω—ñ—á–æ–≥–æ –Ω–µ–º–∞ —Ç–æ –±—É–¥–µ —É –∫–ª—é—á—ñ –∑–Ω–∞—á–µ–Ω–Ω—è undefined
// // ) 
// // console.log(bmw);

// // –ï–∫–∑–µ–º–ø–ª—è—Ä
// const bmw = new Car({
//     model: "bmw",
//     price: 10000,
//     color: "yellow",
// });
// console.log(bmw);






// ===============================================================================================================
//                                                   –£—Ä–æ–∫ 2
// ---------------------------------------------------------------------------------------------------------------
//                                                 –û–û–ü   –ö–ª–∞—Å–∏
// ===============================================================================================================

// üöó –ó–ê–î–ê–ß–ê: –ö–ª–∞—Å –ú–∞—à–∏–Ω–∞ —ñ –ö–ª–∞—Å –ï–ª–µ–∫—Ç—Ä–æ–º–æ–±—ñ–ª—å
// –£—è–≤—ñ–º–æ, —â–æ –º–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ–≥—Ä–∞–º—É –¥–ª—è –∞–≤—Ç–æ—Å–∞–ª–æ–Ω—É. –Ñ –∑–≤–∏—á–∞–π–Ω—ñ –º–∞—à–∏–Ω–∏, –∞ —î —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ ‚Äî –µ–ª–µ–∫—Ç—Ä–æ–º–æ–±—ñ–ª—ñ. –í—Å—ñ –≤–æ–Ω–∏ –º–∞—é—Ç—å –º–∞—Ä–∫—É (–Ω–∞–∑–≤—É) —ñ –∫–æ–ª—ñ—Ä, –∞–ª–µ –µ–ª–µ–∫—Ç—Ä–æ–º–æ–±—ñ–ª—ñ —â–µ –º–∞—é—Ç—å —Ä—ñ–≤–µ–Ω—å –∑–∞—Ä—è–¥—É –±–∞—Ç–∞—Ä–µ—ó.

// ‚úÖ –í–ò–ú–û–ì–ò
// –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞—Å Car, —è–∫–∏–π –º–∞—î:

// –ø—É–±–ª—ñ—á–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ brand (–º–∞—Ä–∫–∞) —ñ color

// –º–µ—Ç–æ–¥ describe() ‚Äî —è–∫–∏–π –æ–ø–∏—Å—É—î –º–∞—à–∏–Ω—É: "–¶–µ [brand] –∫–æ–ª—å–æ—Ä—É [color]"

// –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞—Å ElectricCar, —è–∫–∏–π –Ω–∞—Å–ª—ñ–¥—É—î Car —ñ –¥–æ–¥–∞—î:

// –ø—Ä–∏–≤–∞—Ç–Ω—É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å #batteryLevel

// –≥–µ—Ç—Ç–µ—Ä —ñ —Å–µ—Ç—Ç–µ—Ä –¥–ª—è batteryLevel

// –º–µ—Ç–æ–¥ charge() ‚Äî —è–∫–∏–π –¥–æ–¥–∞—î –∑–∞—Ä—è–¥

// –ö–ª–∞—Å –∑–≤–∏—á–∞–π–Ω–æ—ó –º–∞—à–∏–Ω–∏


class Car {   // class - –∫–ª—é—á–µ–≤–µ —Å–ª–æ–≤–æ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞—Å—ñ–≤. –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –∑–∞–≤–∂–¥–∏ –π–¥–µ –Ω–∞–∑–≤–∞ –∑ –≤–µ–ª–∏–∫–æ—ó –ª—ñ—Ç–µ—Ä–∏
    static message = "–ö–ª–∞—Å, –æ–ø–∏—Å—É—é—á–∏–π –∞–≤—Ç–æ–º–æ–±—ñ–ª—å";

    constructor(brand, color) {
        this.brand = brand;
        this.color = color;
    }
    describe() {   // describe() - –º–µ—Ç–æ–¥ –∫–ª–∞—Å—É, —è–∫–∏–π –æ–ø–∏—Å—É—î –Ω–∞—à –∞–≤—Ç–æ–º–æ–±—ñ–ª—å
        console.log(`–¶–µ ${this.brand} –∫–æ–ª—å–æ—Ä—É ${this.color}`);
        // return `–¶–µ ${this.brand} –∫–æ–ª—å–æ—Ä—É ${this.color}`   // return –Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π
    }
}

class ElectricCar extends Car {   // –∫–ª–∞—Å ElectricCar –Ω–∞—Å–ª—ñ–¥—É—î Car
    #batteryLevel;   // #–Ω–∞–∑–≤–∞ - –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å —ñ —Å—Ç–∞—Ç–∏—á–Ω—ñ –º–µ—Ç–æ–¥–∏ (–º–æ–∂–Ω–∞ –Ω–∞–∑–≤–∞—Ç–∏ –∑–º—ñ–Ω–Ω–æ—é), –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –æ–≥–æ–ª–æ—à—É—é—Ç—å—Å—è –ø–µ—Ä–µ–¥ constructor. –ó–∞–¥–∞—î—Ç—å—Å—è –ø–µ—Ä–µ–¥ –º–µ—Ç–æ–¥–æ–º constructor. –î–æ —Ü—å–æ—ó –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –Ω–µ–º–æ–∂–ª–∏–≤–æ –¥–æ—Å—Ç—É–∫–∞—Ç–∏—Å—è –∑–∞ –º–µ–∂–∞–º–∏ –æ–±'—î–∫—Ç–∞ —Ç–∞–º –¥–µ –≤—ñ–Ω —î.

    constructor(brand, color, batteryLevel) {
        super(brand, color);   // super() - —Å—Ç—è–≥—É—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Å –∫–ª–∞—Å—É Car, —É —Ü—å–æ–º—É –≤–∏–ø–∞–¥–∫—É —Ü–µ:  this.brand = brand; —Ç–∞ this.color = color;
        this.#batteryLevel = batteryLevel;
    }

    get batteryLevel() {   // get - –≥–µ—Ç—Ç–µ—Ä, –¥–æ–∑–≤–æ–ª—è—î –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∞ –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ —Ä—ñ–≤–µ–Ω—å –∑—Ä—è–¥—É
        return this.#batteryLevel
    }

    set batteryLevel(level) { // set - —Å–µ—Ç—Ç–µ—Ä, –¥–æ–∑–≤–æ–ª—è—î –∑–º—ñ–Ω–∏—Ç–∏ –≤–∏–±—Ä–∞–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é
        // return this.#batteryLevel = level;
        if (level < 0 || level > 100) {   // –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∑–∞—Ä—è–¥ –±—ñ–ª—å—à–µ 100
            console.log(`–ü–æ–º–∏–ª–∫–∞: —Ä—ñ–≤–µ–Ω—å –∑–∞—Ä—è–¥—É –Ω–µ–º–æ–∂–ª–∏–≤–∏–π`);
        } else {
            this.#batteryLevel = level;
        }
    }

    charge(value) {
        this.#batteryLevel += value;
    }
}

console.log(Car.message);


const bmw = new Car("bmw", "red");
console.log(bmw);
// bmw.describe();


const tesla = new ElectricCar("tesla", "blue", 50);
console.log(tesla);
// tesla.describe();

// tesla.batteryLevel = 1001;
// console.log(tesla.batteryLevel);

// tesla.charge(30);
// console.log(tesla);
